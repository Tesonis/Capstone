@model ShowList.Models.ManageViewModels.IndexViewModel
@{
    ViewBag.Title = "Manage";
}

<h2>@ViewBag.Title.</h2>
<link rel="stylesheet" type="text/css" href="~/Content/Multitab.css"/>
<style type="text/css">
    .material-switch > input[type="checkbox"] {
    display: none;   
}

.material-switch > label {
    cursor: pointer;
    height: 0px;
    position: relative; 
    width: 40px;  
}

.material-switch > label::before {
    background: rgb(0, 0, 0);
    box-shadow: inset 0px 0px 10px rgba(0, 0, 0, 0.5);
    border-radius: 8px;
    content: '';
    height: 16px;
    margin-top: -8px;
    position:absolute;
    opacity: 0.3;
    transition: all 0.4s ease-in-out;
    width: 40px;
}
.material-switch > label::after {
    background: rgb(255, 255, 255);
    border-radius: 16px;
    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.3);
    content: '';
    height: 24px;
    left: -4px;
    margin-top: -8px;
    position: absolute;
    top: -4px;
    transition: all 0.3s ease-in-out;
    width: 24px;
}
.material-switch > input[type="checkbox"]:checked + label::before {
    background: inherit;
    opacity: 0.5;
}
.material-switch > input[type="checkbox"]:checked + label::after {
    background: inherit;
    left: 20px;
}
</style>
<p class="text-success">@ViewBag.StatusMessage</p>
<link href="~/Content/switches.css" rel="stylesheet" />
<div class="col-md-12">
    <div class="panel with-nav-tabs panel-primary">
        <div class="panel-heading">
            <ul class="nav nav-tabs">
                <li class="active"><a href="#tab1primary" data-toggle="tab">Profile</a></li>
            </ul>
        </div>
        <div class="panel-body">
            <div class="tab-content">
                @using (Html.BeginForm("Index", "Manage", FormMethod.Post))
                {
                <div class="tab-pane fade in active" id="tab1primary">
                    
                    <div class="col-md-11">
                        <h4>Profile</h4>
                        <hr />
                    </div>
                    <div class="form-group">
                        <label class="col-md-4 control-label" for="gendere">Gender</label>
                            @Html.DropDownList("Gender", (SelectList)ViewBag.gen, new { @class = "form-control" })

                    </div>
                    <div class="form-group">
                        <label class="col-md-4 control-label" for="location">Location</label>
                            @Html.EditorFor(Model => Model.Location, new { @class = "form-control search" })
                    </div>
                    <div class="form-group">
                        <label class="col-md-4 control-label" for="singlebutton">About me</label>
                            @Html.TextAreaFor(Model => Model.AboutMe, new { @class = "form-control" });
                    </div>

                    <div class="form-group">
                        <label class="col-md-4 control-label" for="gendere">Default tab</label>
                            @Html.DropDownList("DefaultTab", (SelectList)ViewBag.sl, new { @class = "form-control" })
                    </div>
                    <h4>Change your account settings</h4>
                    <hr />
                    <dl class="dl-horizontal">
                        <dt>Password:</dt>
                        <dd>
                            [
                            @if (Model.HasPassword)
                            {
                                @Html.ActionLink("Change your password", "ChangePassword")
                            }
                            else
                            {
                                @Html.ActionLink("Create", "SetPassword")
                            }
                            ]
                        </dd>
                        <dt>External Logins:</dt>
                        <dd>
                            @Model.Logins.Count [
                            @Html.ActionLink("Manage", "ManageLogins") ]
                        </dd>
                        @*
            Phone Numbers can used as a second factor of verification in a two-factor authentication system.

             See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support two-factor authentication using SMS.

             Uncomment the following block after you have set up two-factor authentication
                        *@
                        @*
            <dt>Phone Number:</dt>
            <dd>
                @(Model.PhoneNumber ?? "None")
                @if (Model.PhoneNumber != null)
                {
                    <br />
                    <text>[&nbsp;&nbsp;@Html.ActionLink("Change", "AddPhoneNumber")&nbsp;&nbsp;]</text>
                    using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>[<input type="submit" value="Remove" class="btn-link" />]</text>
                    }
                }
                else
                {
                    <text>[&nbsp;&nbsp;@Html.ActionLink("Add", "AddPhoneNumber")
                }
            </dd>
                        *@
                        <dt>Two-Factor Authentication:</dt>
                        <dd>
                            <p>
                                There are no two-factor authentication providers configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                                for details on setting up this ASP.NET application to support two-factor authentication.
                            </p>
                            @*@if (Model.TwoFactor)
                {
                    using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>Enabled
                        <input type="submit" value="Disable" class="btn btn-link" />
                        </text>
                    }
                }
                else
                {
                    using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>Disabled
                        <input type="submit" value="Enable" class="btn btn-link" />
                        </text>
                    }
                }*@
                        </dd>
                    </dl>
                    <ul class="list-group">
                        <li class="list-group-item">
                            Receive Friend Requests
                            <div class="material-switch pull-right">
                                <input id="someSwitchOptionPrimary1" name="someSwitchOption001" type="checkbox" />
                                <label for="someSwitchOptionPrimary1" class="label-primary"></label>
                            </div>
                        </li>
                        <li class="list-group-item">
                            Notify Missed Episodes
                                @Html.CheckBoxFor(Model => Model.MissedEp, new { @class = "material-switch pull-right" })
                        </li>
                        <li class="list-group-item">
                            Receive Messages
                            @Html.CheckBoxFor(Model => Model.Messages, new { @class = "material-switch pull-right" })
                        </li>
                    </ul>
                </div>
                <div class="tab-pane fade" id="tab3primary">
                    
                </div>
                <div class="tab-pane fade" id="tab4primary">
                    
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary btn-block">Update</button>
                </div>
                    }
            </div>
        </div>
    </div>
</div>
